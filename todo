Next MVP:
	✔ have current system read full request from buffer @done(23-08-13 17:40)
	☐ send valid mockup response to client
	☐ send a variable response to client, with just a specific text response depending on the request : "i received a GET/PUT/etc request"(will need request parsing)
	☐ start implementing methods prototypes
	☐ reponse header constructor, simple step by simple step(biggest unknown for now)
	☐ after all that, it's probably possible to start automating testing, particular cases by particular cases (status, methods, CGI)
	☐ exec CGI (should not be terribly hard,it's an established process)
	☐ manage exceptions and error (http code, etc.)
TCP:

	✔ mockup parser to print a vector of char @done(23-08-15 15:58)
	☐ Converter from string to int for ip
	☐ loop of server ports binding to epoll struct (currently only 1)
	✔ protection with throw @done(23-08-13 17:40)
	✔ read_from_client function @done(23-08-12 17:58)
	✔ write_to_client function @done(23-08-12 18:19)
	✔ bool checker is_new_connection @done(23-08-12 18:23)
	✔ send_response @done(23-08-12 18:26)
	☐ is_request_over()
	✔ update_connection_status() !! @done(23-08-15 15:58)
	☐ mockup of reponse for nav
	☐ is_connection_over
	☐ chunked encoding will need to be implemented to manage files (pictures/gif/sound/etc.) chunked request for PUT media, chunked response for GET requests

 Buffer:
	☐ increment_response_count
	☐ bool checker for buffer
	✔ char vector getter for usage @done(23-08-13 17:40)
	☐ buffer editor